/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.7/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    // Apply kotlin jvm library
    id "org.jetbrains.kotlin.jvm" version "1.4.10"
}

version = '0.0.3'
group = 'com.palizpars.android'
sourceCompatibility = '1.8'
repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:29.0-jre'

    // WebSocket dependencies
    implementation 'com.tinder.scarlet:scarlet:0.1.9'
    implementation "com.tinder.scarlet:websocket-okhttp:0.1.9"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    implementation "com.tinder.scarlet:stream-adapter-rxjava2:0.1.9"

    // GSON Model Converter
    implementation "com.tinder.scarlet:message-adapter-gson:0.1.10"
    implementation 'com.squareup.retrofit2:converter-gson:2.6.2'
}
apply plugin: 'maven-publish'
apply plugin: 'kotlin'
publishing {
    archivesBaseName = rootProject.name
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
    publications {
        maven(MavenPublication) {
            artifactId = archivesBaseName
            artifact("build/libs/$archivesBaseName-$version" + ".jar") {
                extension 'jar'
            }
        }
    }
    repositories {
        maven {
            Properties properties = new Properties()
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            name 'nexus'
            url properties['GRADLE_REPO_URL']
            credentials {
                username properties['GRADLE_REPO_USERNAME']
                password properties['GRADLE_REPO_PASSWORD']
            }
        }
    }
}